#include <stdio.h>
#include <stdlib.h>
#include <sys/shm.h>
#include <unistd.h>
#include <sys/wait.h>

int main() {
    int shm_id;
    int *shm_ptr;
    int value = 0;

    shm_id = shmget(IPC_PRIVATE, sizeof(int), IPC_CREAT | 0666);
    if (shm_id < 0) {
        perror("shmget");
        exit(1);
    }

    shm_ptr = (int *)shmat(shm_id, NULL, 0);
    if (shm_ptr == (int *)-1) {
        perror("shmat");
        exit(1);
    }

    pid_t pid = fork();
    if (pid == 0) {
        printf("Child process: shared memory value before modification = %d\n", *shm_ptr);
        *shm_ptr = 5;
        printf("Child process: shared memory value after modification = %d\n", *shm_ptr);
        exit(0);
    } else if (pid > 0) {
        wait(NULL);
        printf("Parent process: shared memory value = %d\n", *shm_ptr);
        shmdt(shm_ptr);
        shmctl(shm_id, IPC_RMID, NULL);
    } else {
        perror("fork");
        exit(1);
    }

    return 0;
}

